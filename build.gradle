plugins {
    id 'java'
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.22.0'
    id "de.marcphilipp.nexus-publish" version "0.4.0"
}

version = "${project_version}" + (isSnapshot() ? '+' + getBuildNumber() : '')
description = 'Clam Chowder is a modern ClamAV client written in Java.'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.0'
    testImplementation group: 'org.testcontainers', name: 'testcontainers', version: '1.15.1'
    testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.15.3'
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    description = 'Creates a JAR containing the source code.'
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    description = 'Creates a JAR containing the JavaDocs.'
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jar {
    manifest {
        attributes([
                'Timestamp'               : System.currentTimeMillis(),
                'Specification-Title'     : project.archivesBaseName,
                'Specification-Vendor'    : project.vendor,
                'Specification-Version'   : project.version,
                'Implementation-Title'    : project.archivesBaseName,
                'Implementation-Version'  : project.version,
                'Implementation-Vendor'   : project.vendor,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})"
        ])
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (System.getenv("GPG_KEYNAME")) {
        ext."signing.gnupg.keyName" = System.getenv("GPG_KEYNAME");
    }
}

signing {
    useGpgCmd()
    sign publishing.publications
}

tasks.withType(Sign) {
    onlyIf { !isSnapshot() }
}

nexusStaging {
    packageGroup = 'com.diluv'
    username = System.getenv("OSSRH_USERNAME")
    password = System.getenv("OSSRH_PASSWORD")
}

nexusPublishing {
    repositories {
        sonatype {
            username = System.getenv("OSSRH_USERNAME")
            password = System.getenv("OSSRH_PASSWORD")
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            group = project.group
            artifactId = project.name
            version = project.version

            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = project.name
                description = project.description
                url = 'https://github.com/Diluv/Clam-Chowder'

                scm {
                    connection = 'scm:git:git://github.com/Diluv/Clam-Chowder.git'
                    developerConnection = 'scm:git:ssh://github.com/Diluv/Clam-Chowder.git'
                    url = 'https://github.com/Diluv/Clam-Chowder'
                }

                licenses {
                    license {
                        name = 'GNU Lesser General Public License v2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html'
                    }
                }

                developers {
                    developer {
                        id = 'lclc98'
                        name = 'lclc98'
                        email = 'lclc98@lclc98.com'
                    }
                }
            }
        }
    }
}

static String getBuildNumber() {
    return System.getenv("GITHUB_RUN_NUMBER") ?: "0"
}

static boolean isSnapshot() {
    String ref = System.getenv("GITHUB_REF");
    if (ref != null && ref.startsWith("refs/tags/v")) {
        return false
    }
    return true
}